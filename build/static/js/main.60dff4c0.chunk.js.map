{"version":3,"sources":["AlgoSigner/index.js","helpers/interface.js","components/Uploader/HoverIcon.js","components/Uploader/SNETImageUpload.js","components/Uploader/index.js","App.js","reportWebVitals.js","index.js"],"names":["AlgoSigner","window","AlgoSignerConnect","a","ok","connect","then","d","catch","e","console","error","AlgoSignerAccounts","accounts","ledger","AlgoSignerGetTxParams","txParams","algod","path","AlgoSignerSign","params","signedTx","from","to","amount","note","sign","type","fee","firstRound","lastRound","genesisID","genesisHash","flatFee","AlgoSignerSendTx","sentTx","send","tx","blob","AlgoSignerCheckTx","txStatus","txId","SERVICES_ENDPOINT","process","JWT_SECRET","GetStyleTransferResponse","content","style","body","axios","post","headers","result","HoverIcon","props","state","hover","renderIconButton","bind","children","this","IconButton","onMouseEnter","setState","onMouseLeave","color","onColor","offColor","target","href","text","Tooltip","title","Typography","fontFamily","fontSize","textColor","React","Component","defaultProps","blue","grey","snetGreyError","snetGrey","snetBackgroundGrey","snetRed","red","snetBackgroundRed","snetFont","SNETImageUpload","tabHeight","Math","max","dropzoneHeightOffset","mainState","outputImage","value","disableOutputTab","disableComparisonTab","disableUploadTab","disableUrlTab","searchText","errorMessage","displayError","displayImageName","inputImageData","mimeType","encoding","filename","base64Reader","undefined","byteReader","imageXPosition","dividerXPosition","width","displayModeTitle","prepareBase64Image","outputImageName","tabStyle","position","overflow","height","tabLabelStyle","fontVariantCaps","textTransform","mainColor","theme","createMuiTheme","palette","primary","typography","useNextVariants","urlErrorMessage","fileSizeError","maxImageSize","fileTypeError","allowedInputTypes","inputImageErrorMessage","outputImageErrorMessage","imageDiv","createRef","inputImage","handleMouseMove","handleSearchSubmit","handleTabChange","sendData","setInputImageDimensions","setInitialImageXPosition","setLoadingState","verifyAndUpload","toDataUrl","searchTextUpdate","displayErrorMessage","setUploadedState","nextProps","nextContent","outputImageMimeType","getBase64ImageType","addBase64Header","disableResetButton","data","imageDataFunc","imageData","replace","length","includes","indexOf","maxImageHeight","maxImageWidth","img","Image","crossOrigin","onload","naturalHeight","naturalWidth","src","file","reader","FileReader","readAsDataURL","onloadend","Uint8Array","name","files","event","preventDefault","stopPropagation","split","byteReaderOnLoadEnd","returnByteArray","readAsArrayBuffer","Grid","item","xs","FileDrop","onDrop","handleImageUpload","id","display","accept","onChange","ref","input","inputElement","onClick","click","borderWidth","borderColor","borderStyle","borderRadius","cursor","flexDirection","container","direction","justify","alignItems","flexGrow","spacing","padding","CloudUpload","margin","textAlign","outputFormat","dataURL","substring","lastIndexOf","callback","onerror","canvas","document","createElement","context","getContext","drawImage","toDataURL","toBlob","instantUrlFetch","url","image","allowURL","justifyContent","TextField","variant","label","fontWeight","InputProps","endAdornment","InputAdornment","marginRight","flexWrap","GridList","cols","galleryCols","imageGallery","map","i","Grow","in","transformOrigin","timeout","GridListTile","alt","loading","Fade","unmountOnExit","CircularProgress","onMouseOver","onError","displayProportionalImage","maxHeight","maxWidth","GridListTileBar","axis","index","renderUploadTab","renderUrlTab","renderGalleryTab","disableInputTab","renderInputImage","renderOutputImage","renderComparison","ClickAwayListener","onClickAway","Snackbar","open","autoHideDuration","TransitionComponent","Slide","transitionDuration","onClose","SnackbarContent","backgroundColor","border","aria-describedby","message","align","opacity","alignText","Fragment","offsetLeft","current","getBoundingClientRect","left","offsetImageLeft","clientX","inputImageHeight","clientHeight","inputImageWidth","clientWidth","onMouseMove","onLoad","clip","overlayInputImage","borderLeft","top","transform","minHeight","minWidth","paddingBottom","noWrap","spacingUnit","imageName","Tabs","indicatorColor","TabIndicatorProps","bottom","Tab","flexBasis","paddingLeft","inputTabTitle","outputTabTitle","comparisonTabTitle","infoTip","handleImageReset","disableDownloadButton","download","renderTabs","renderLoadingState","renderUploadedState","base64img","charAt","rawBase64","initialUserInput","contentSize","styleSize","preserveColor","alpha","crop","saveExt","Uploader","setup","useAlgoSigner","runService","processingTx","response","isComplete","output","alert","mainFont","mainFontSize","users_guide","code_repo","reference","styleGallery","canBeInvoked","reset","getContentImageData","getStyleImageData","secondary","overrides","MuiIconButton","colorPrimary","colorSecondary","MuiSvgIcon","Paper","SvgIcon","parseResponse","paddingTop","Button","size","marginLeft","disabled","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.60dff4c0.chunk.js","sourcesContent":["const AlgoSigner = window.AlgoSigner;\n\nasync function AlgoSignerConnect() {\n\tlet ok = false;\n\tif (AlgoSigner) {\n\t\ttry {\n\t\t\tawait AlgoSigner.connect()\n\t\t\t\t.then((d) => {\n\t\t\t\t\tok = true;\n\t\t\t\t})\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n\telse {\n\t\tconsole.error('AlgoSigner not installed!')\n\t}\n\treturn ok;\n}\n\nasync function AlgoSignerAccounts() {\n\tlet accounts = {};\n\tawait AlgoSigner.accounts({\n\t\t\tledger: 'TestNet'\n\t\t})\n\t\t.then((d) => {\n\t\t\taccounts = d;\n\t\t})\n\t\t.catch((e) => {\n\t\t\tconsole.error(e);\n\t\t})\n\treturn accounts;\n}\n\nasync function AlgoSignerGetTxParams() {\n\tlet txParams = {};\n\tawait AlgoSigner.algod({\n\t\tledger: 'TestNet',\n\t\tpath: '/v2/transactions/params'\n\t})\n\t.then((d) => {\n\t\ttxParams = d;\n\t})\n\t.catch((e) => {\n\t\tconsole.error(e);\n\t});\n\treturn txParams\n}\n\nasync function AlgoSignerSign(params) {\n\tlet signedTx = {};\n\tconst { from, to, amount, note } = params;\n\tconst txParams = await AlgoSignerGetTxParams();\n\tif (txParams) {\n\t\tawait AlgoSigner.sign({\n\t\t\t\tfrom: from,\n\t\t\t\tto: to,\n\t\t\t\tamount: amount,\n\t\t\t\tnote: note,\n\t\t\t\ttype: 'pay',\n\t\t\t\tfee: txParams['min-fee'],\n\t\t\t\tfirstRound: txParams['last-round'],\n\t\t\t\tlastRound: txParams['last-round'] + 1000,\n\t\t\t\tgenesisID: txParams['genesis-id'],\n\t\t\t\tgenesisHash: txParams['genesis-hash'],\n\t\t\t\tflatFee: true\n\t\t\t})\n\t\t\t.then((d) => {\n\t\t\t\tsignedTx = d;\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.error(e);\n\t\t\t});\n\t}\n\treturn signedTx;\n}\n\nasync function AlgoSignerSendTx(signedTx) {\n\tlet sentTx = {};\n\tawait AlgoSigner.send({\n\t\t\tledger: 'TestNet',\n\t\t\ttx: signedTx.blob\n\t\t})\n\t\t.then((d) => {\n\t\t\tsentTx = d;\n\t\t})\n\t\t.catch((e) => {\n\t\t\tconsole.error(e);\n\t\t});\n\treturn sentTx;\n}\n\nasync function AlgoSignerCheckTx(tx) {\n\tlet txStatus = {};\n\tawait AlgoSigner.algod({\n\t\t\tledger: 'TestNet',\n\t\t\tpath: '/v2/transactions/pending/' + tx.txId\n\t\t})\n\t\t.then((d) => {\n\t\t\ttxStatus = d;\n\t\t})\n\t\t.catch((e) => {\n\t\t\tconsole.error(e);\n\t\t});\n\treturn txStatus;\n}\n\nexport {\n  AlgoSignerConnect,\n  AlgoSignerAccounts,\n  AlgoSignerGetTxParams,\n  AlgoSignerSign,\n  AlgoSignerSendTx,\n  AlgoSignerCheckTx\n};","import axios from 'axios';\n\nconst SERVICES_ENDPOINT = process.env.REACT_APP_SERVICES_ENDPOINT\nconst JWT_SECRET = process.env.REACT_APP_JWT_SECRET\n\nasync function GetStyleTransferResponse(content, style) {\n    const body = {\n        content: content,\n        style: style,\n    }\n    const result = await axios.post(`${SERVICES_ENDPOINT}/style-transfer`, body, {\n        headers: {\n            'Authorization': JWT_SECRET\n        },\n    });\n    return result;\n}\n\nexport {\n    GetStyleTransferResponse,\n};\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Tooltip, IconButton } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { blue, grey } from \"@material-ui/core/colors\";\n\nexport default class HoverIcon extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hover: false,\n    };\n    this.renderIconButton = this.renderIconButton.bind(this);\n  }\n\n  renderIconButton() {\n    let { children } = this.props;\n    return (\n      <IconButton\n        onMouseEnter={function() {\n          this.setState({ hover: true });\n        }.bind(this)}\n        onMouseLeave={function() {\n          this.setState({ hover: false });\n        }.bind(this)}\n        style={this.state.hover ? { color: this.props.onColor } : { color: this.props.offColor }}\n        target=\"_blank\"\n        href={this.props.href}\n      >\n        {children}\n      </IconButton>\n    );\n  }\n\n  render() {\n    return this.props.text ? (\n      <Tooltip\n        title={\n          <Typography\n            style={{\n              fontFamily: this.props.fontFamily,\n              fontSize: this.props.fontSize,\n              color: this.props.textColor,\n            }}\n          >\n            {this.props.text}\n          </Typography>\n        }\n      >\n        {this.renderIconButton()}\n      </Tooltip>\n    ) : (\n      this.renderIconButton()\n    );\n  }\n}\n\nHoverIcon.propTypes = {\n  text: PropTypes.string,\n  textColor: PropTypes.string,\n  fontFamily: PropTypes.string,\n  fontSize: PropTypes.number,\n  href: PropTypes.string,\n  onColor: PropTypes.string,\n  offColor: PropTypes.string,\n};\n\nHoverIcon.defaultProps = {\n  text: null,\n  fontFamily: \"Muli\",\n  fontSize: 14,\n  textColor: \"white\",\n  onColor: blue[500],\n  offColor: grey[600],\n};","/*============================================\nAuthor: Ramon Duraes\nEmail: ramon@singularitynet.io\nGithub: https://github.com/ramongduraes\nDate: 02 February 2019\n==============================================*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport { CloudUpload } from \"@material-ui/icons\";\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport UnfoldMoreIcon from \"@material-ui/icons/UnfoldMore\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport Fade from \"@material-ui/core/Fade\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport { grey, red, blue } from \"@material-ui/core/colors\";\n\nimport SwipeableViews from \"react-swipeable-views\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nimport { Tooltip } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport FileDrop from \"react-file-drop\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\"; // for image uploaded state\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\n\n// Color Palette\nconst snetGreyError = grey[700];\nconst snetGrey = grey[500];\n// const dropzoneBackgroundGrey = grey[200];\nconst snetBackgroundGrey = grey[100];\nconst snetRed = red[500];\nconst snetBackgroundRed = red[100];\n\n// Definitions\nconst spacingUnit = 8;\nconst snetFont = \"Muli\";\nconst minimumWidth = \"400px\";\nconst minimumTabHeight = 160;\n\nexport default class SNETImageUpload extends React.Component {\n  static getBase64ImageType(base64img) {\n    // Extracts base64-encoded image's mime type\n    let mimeType;\n\n    if (base64img.charAt(0) === \"/\") {\n      mimeType = \"image/jpeg\";\n    } else if (base64img.charAt(0) === \"R\") {\n      mimeType = \"image/gif\";\n    } else if (base64img.charAt(0) === \"i\") {\n      mimeType = \"image/png\";\n    } else {\n      mimeType = \"application/octet-stream\";\n    }\n\n    return mimeType;\n  }\n\n  static addBase64Header(mimeType, rawBase64) {\n    //Adds headers to raw base64 encoded images so they can be displayed in an img tag\n    return \"data:\" + mimeType + \";base64,\" + rawBase64;\n  }\n\n  static prepareBase64Image(base64img) {\n    // Extracts image type and adds headers\n    let mimeType = SNETImageUpload.getBase64ImageType(base64img);\n    return SNETImageUpload.addBase64Header(mimeType, base64img);\n  }\n\n  constructor(props) {\n    super(props);\n    // It is the same thing, only difference is Component where we do the binding.\n    // Component is lower in the tree, and now button has the logic how to open the screen.\n\n    // Setting minimum tab height\n    this.tabHeight = Math.max(minimumTabHeight, this.props.tabHeight);\n    this.dropzoneHeightOffset = 14;\n\n    this.state = {\n      // Component's flow of execution\n      mainState: this.props.outputImage ? \"display\" : \"initial\", // initial, loading, uploaded, display\n      value: this.props.outputImage\n        ? this.props.disableOutputTab\n          ? this.props.disableComparisonTab\n            ? 3\n            : 5\n          : 4\n        : this.props.disableUploadTab // Logic for defining the initial tab depending on which are available\n        ? this.props.disableUploadTab + this.props.disableUrlTab\n        : 0,\n      searchText: null,\n      errorMessage: null,\n      displayError: false,\n      displayImageName: false,\n      // Selected image data (sent via callback function)\n      inputImageData: null, // encoded image data. NOT ALWAYS THE SAME DATA SENT VIA CALLBACK\n      mimeType: null, // \"jpeg\", \"png\", etc\n      encoding: null, // \"byteArray\", \"base64\", \"url\"\n      filename: null, // image filename\n      // Image data readers\n      base64Reader: undefined,\n      byteReader: undefined,\n\n      // Output display mode\n      imageXPosition: undefined, // arbitrary, will be set properly\n      dividerXPosition: this.props.width / 2,\n      displayModeTitle: this.props.displayModeTitle,\n      outputImage: this.props.outputImage && SNETImageUpload.prepareBase64Image(this.props.outputImage),\n      outputImageName: this.props.outputImageName,\n    };\n\n    this.tabStyle = {\n      position: \"relative\",\n      overflow: \"hidden\",\n      height: this.tabHeight + \"px\",\n    };\n\n    this.tabLabelStyle = {\n      fontFamily: snetFont,\n      fontVariantCaps: \"normal\",\n      textTransform: \"initial\",\n      fontSize: 14,\n    };\n\n    // Color Palette\n    this.mainColor = this.props.mainColor[500];\n    this.theme = createMuiTheme({\n      palette: {\n        primary: this.props.mainColor,\n        error: red,\n      },\n      typography: { useNextVariants: true },\n    });\n\n    // Error Messages\n    this.urlErrorMessage = \"Incorrect URL or permission denied by server.\";\n    this.fileSizeError = \"File size exceeds limits (\" + this.props.maxImageSize / 1000000 + \"mb).\";\n    this.fileTypeError = \"File type not accepted. Allowed: \" + this.props.allowedInputTypes + \".\";\n    this.inputImageErrorMessage = \"Content image could not be rendered.\";\n    this.outputImageErrorMessage = \"Output image could not be rendered.\";\n\n    // Refs\n    this.imageDiv = React.createRef();\n    this.inputImage = React.createRef();\n    this.outputImage = React.createRef();\n\n    // Function binding\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleSearchSubmit = this.handleSearchSubmit.bind(this);\n    this.handleTabChange = this.handleTabChange.bind(this);\n    this.sendData = this.sendData.bind(this);\n    this.setInputImageDimensions = this.setInputImageDimensions.bind(this);\n    this.setInitialImageXPosition = this.setInitialImageXPosition.bind(this);\n    this.setLoadingState = this.setLoadingState.bind(this);\n    this.verifyAndUpload = this.verifyAndUpload.bind(this);\n    this.toDataUrl = this.toDataUrl.bind(this);\n    this.searchTextUpdate = this.searchTextUpdate.bind(this);\n    this.displayErrorMessage = this.displayErrorMessage.bind(this);\n    this.setUploadedState = this.setUploadedState.bind(this);\n  }\n\n  // When props.outputImage changes, the component changes to the display mode.\n  componentWillReceiveProps(nextProps, nextContent) {\n    let mimeType;\n\n    //\"data:\" + this.state.outputImageMimeType + \";base64,\" +\n    if (nextProps.outputImage) {\n      if (nextProps.outputImage !== this.props.outputImage) {\n        if (nextProps.outputImageMimeType === undefined) {\n          mimeType = SNETImageUpload.getBase64ImageType(nextProps.outputImage);\n        } else {\n          mimeType = nextProps.outputImageMimeType;\n        }\n\n        this.setState({\n          displayModeTitle: nextProps.displayModeTitle,\n          outputImage: SNETImageUpload.addBase64Header(mimeType, nextProps.outputImage),\n          outputImageMimeType: mimeType,\n          outputImageName: nextProps.outputImageName,\n          mainState: \"display\",\n          value: nextProps.disableOutputTab ? (nextProps.disableComparisonTab ? 3 : 5) : 4,\n        });\n      }\n    } else {\n      // Resets component if outputImage is empty again\n      if (this.props.outputImage) {\n        this.setState(\n          {\n            // Component's flow of execution\n            mainState: \"initial\", // initial, loading, uploaded, display\n            value: this.props.disableUploadTab // Logic for defining the initial tab depending on which are available\n              ? this.props.disableUploadTab + this.props.disableUrlTab\n              : 0,\n            searchText: null,\n            errorMessage: null,\n            displayError: false,\n            displayImageName: false,\n            // Selected image data (sent via callback function)\n            inputImageData: null, // encoded image data. NOT ALWAYS THE SAME DATA SENT VIA CALLBACK\n            mimeType: null, // \"jpeg\", \"png\", etc\n            encoding: null, // \"byteArray\", \"base64\", \"url\"\n            filename: null, // image filename\n            // Image data readers\n            base64Reader: undefined,\n            byteReader: undefined,\n            // Output display mode\n            imageXPosition: undefined, // arbitrary, will be set properly\n            dividerXPosition: this.props.width / 2,\n            displayModeTitle: this.props.displayModeTitle,\n            outputImage: this.props.outputImage,\n            outputImageName: this.props.outputImageName,\n          },\n          () => this.sendData(this.state.inputImageData)\n        );\n      }\n    }\n\n    // Resets the component if disableResetButton is false:\n    this.props.disableResetButton &&\n      !nextProps.disableResetButton &&\n      this.setState(\n        {\n          // Component's flow of execution\n          mainState: \"initial\", // initial, loading, uploaded, display\n          value: this.props.disableUploadTab // Logic for defining the initial tab depending on which are available\n            ? this.props.disableUploadTab + this.props.disableUrlTab\n            : 0,\n          searchText: null,\n          errorMessage: null,\n          displayError: false,\n          displayImageName: false,\n          // Selected image data (sent via callback function)\n          inputImageData: null, // encoded image data. NOT ALWAYS THE SAME DATA SENT VIA CALLBACK\n          mimeType: null, // \"jpeg\", \"png\", etc\n          encoding: null, // \"byteArray\", \"base64\", \"url\"\n          filename: null, // image filename\n          // Image data readers\n          base64Reader: undefined,\n          byteReader: undefined,\n\n          // Output display mode\n          imageXPosition: undefined, // arbitrary, will be set properly\n          dividerXPosition: this.props.width / 2,\n          displayModeTitle: this.props.displayModeTitle,\n          outputImage: this.props.outputImage,\n          outputImageName: this.props.outputImageName,\n        },\n        () => this.sendData(this.state.inputImageData)\n      );\n  }\n\n  setLoadingState() {\n    this.setState({\n      mainState: \"loading\",\n    });\n  }\n\n  sendData(\n    data = this.state.inputImageData,\n    mimeType = this.state.mimeType,\n    encoding = this.state.encoding,\n    filename = this.state.filename\n  ) {\n    this.props.imageDataFunc(data, mimeType, encoding, filename);\n    // console.log(\n    //   \"Sent: \\nMIME type: \" + mimeType + \"\\nEncoding: \" + encoding + \"\\nFilename: \" + filename + \"\\nImage data: \" + data\n    // );\n  }\n\n  setUploadedState(imageData, sendData, encoding, mimeType, filename) {\n    // If the image follows the specifications, sets state to uploaded\n    this.setState(\n      {\n        mainState: \"uploaded\", // initial, loading, uploaded\n        searchText: null,\n        inputImageData: imageData,\n        mimeType,\n        encoding,\n        filename,\n        displayError: false,\n        errorMessage: null,\n      },\n      () => {\n        this.sendData(sendData);\n      }\n    );\n  }\n\n  verifyAndUpload(imageData, sendData, encoding, mimeType, filename) {\n    // imageData: base64 encoded image\n    // sendData: might be base64, bytes or url\n    // Verifies image data against allowed types, max size, width and height and uploads the image if its within the\n    // specifications.\n\n    if (encoding === \"url\") {\n      this.setUploadedState(imageData, sendData, encoding, mimeType, filename);\n    } else {\n      // Checks file size\n      const byteLength = imageData.replace(/=/g, \"\").length * 0.75;\n      if (byteLength > this.props.maxImageSize) {\n        this.displayErrorMessage(this.fileSizeError);\n        return;\n      }\n\n      // Checks file type\n      if (this.props.allowedInputTypes.includes(\"image/*\")) {\n        // if we accept all image types\n        if (mimeType.indexOf(\"image\") === -1) {\n          // if received file is not an image\n          this.displayErrorMessage(this.fileTypeError + \"Got: \" + mimeType + \".\");\n          return;\n        }\n      } else {\n        // verifies input type against each allowed input type\n        if (!this.props.allowedInputTypes.includes(mimeType)) {\n          this.displayErrorMessage(this.fileTypeError + \"Got: \" + mimeType + \".\");\n          return;\n        }\n      }\n\n      // Checks image dimensions if they have been defined\n      if (this.props.maxImageHeight || this.props.maxImageWidth) {\n        const img = new Image();\n        img.crossOrigin = \"anonymous\";\n        img.setUploadedState = this.setUploadedState;\n        img.displayErrorMessage = this.displayErrorMessage;\n        img.imageData = imageData;\n        img.sendData = sendData;\n        img.encoding = encoding;\n        img.mimeType = mimeType;\n        img.filename = filename;\n        img.maxImageWidth = this.props.maxImageWidth;\n        img.maxImageHeight = this.props.maxImageHeight;\n        img.onload = function() {\n          if (this.maxImageHeight) {\n            if (this.naturalHeight > this.maxImageHeight) {\n              this.displayErrorMessage(\n                \"Maximum image height (\" + this.maxImageHeight + \"px) exceeded.  Got: \" + this.naturalHeight + \"px.\"\n              );\n              return;\n            }\n          }\n          if (this.maxImageWidth) {\n            if (this.naturalWidth > this.maxImageWidth) {\n              this.displayErrorMessage(\n                \"Maximum image width (\" + this.maxImageWidth + \"px) exceeded.  Got: \" + this.naturalWidth + \"px.\"\n              );\n              return;\n            }\n          }\n          this.setUploadedState(this.imageData, this.sendData, this.encoding, this.mimeType, this.filename);\n        };\n        img.src = imageData;\n      } else {\n        // Goes to uploaded state.\n        this.setUploadedState(imageData, sendData, encoding, mimeType, filename);\n      }\n    }\n  }\n\n  displayErrorMessage(errorMessage, state = \"initial\") {\n    this.setState({\n      mainState: state,\n      searchText: null,\n      inputImageData: null,\n      mimeType: null,\n      encoding: null,\n      filename: null,\n      errorMessage,\n      displayError: true,\n    });\n  }\n\n  /* ----------------\n       - IMAGE UPLOAD -\n    *  ----------------*/\n\n  byteReaderOnLoadEnd(file) {\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = function() {\n      this.verifyAndUpload(\n        reader.result,\n        new Uint8Array(this.state.byteReader.result),\n        \"byteArray\",\n        file.type,\n        file.name\n      );\n    }.bind(this);\n  }\n\n  handleImageUpload(files, event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.setLoadingState();\n\n    const file = files[0];\n\n    // Is always used\n    let reader = new FileReader();\n    reader.onloadend = function() {\n      this.setState(\n        {\n          base64Reader: reader,\n        },\n        () => {\n          this.verifyAndUpload(\n            this.state.base64Reader.result,\n            this.state.base64Reader.result.split(\",\")[1],\n            \"base64\",\n            file.type,\n            file.name\n          );\n        }\n      );\n    }.bind(this);\n\n    let byteReader = new FileReader();\n    byteReader.onloadend = function() {\n      this.setState({\n        byteReader,\n      });\n      this.byteReaderOnLoadEnd(file);\n    }.bind(this);\n\n    if (this.props.returnByteArray) {\n      byteReader.readAsArrayBuffer(file);\n    } else {\n      reader.readAsDataURL(file);\n    }\n  }\n\n  renderUploadTab() {\n    return (\n      <Grid item xs={12}>\n        <FileDrop onDrop={(files, event) => this.handleImageUpload(files, event)}>\n          <input\n            id=\"myInput\"\n            type=\"file\"\n            style={{ display: \"none\" }}\n            accept={this.props.allowedInputTypes}\n            onChange={e => this.handleImageUpload(e.target.files, e)}\n            ref={input => (this.inputElement = input)}\n          />\n          <div\n            onClick={() => this.inputElement.click()}\n            style={{\n              borderWidth: 1,\n              borderColor: \"#d6d6d6\",\n              borderStyle: \"dashed\",\n              borderRadius: 4,\n              cursor: \"pointer\",\n              overflow: \"hidden\",\n              height: this.tabHeight - this.dropzoneHeightOffset + 10 + \"px\",\n              display: \"flex\",\n              flexDirection: \"column\",\n            }}\n          >\n            <Grid\n              container\n              direction=\"column\"\n              justify=\"center\"\n              alignItems=\"center\"\n              style={{\n                flexGrow: 1,\n                height: this.tabHeight + \"px\",\n              }}\n              spacing={spacingUnit}\n            >\n              <Grid item style={{ padding: \"0 40px\" }}>\n                <CloudUpload style={{ fontSize: 48, color: this.mainColor }} />\n              </Grid>\n              <Grid item style={{ padding: \"0 40px\" }}>\n                <Typography\n                  style={{\n                    fontFamily: snetFont,\n                    fontVariantCaps: \"normal\",\n                    textTransform: \"initial\",\n                    fontSize: 16,\n                    color: snetGrey,\n                  }}\n                >\n                  Drag and drop image here or\n                  <span style={{ color: this.mainColor }}> click</span>\n                </Typography>\n              </Grid>\n              <Grid item style={{ padding: \"20px 40px\" }}>\n                <Typography\n                  style={{\n                    width: \"58%\",\n                    margin: \"0 auto\",\n                    fontFamily: snetFont,\n                    fontVariantCaps: \"normal\",\n                    textTransform: \"initial\",\n                    fontSize: 12,\n                    color: \"#9b9b9b\",\n                    textAlign: \"center\",\n                    padding: spacingUnit,\n                  }}\n                >\n                  (Image must be under {this.props.maxImageSize / 1000000}mb. Source images are not saved on the servers\n                  after the job is processed.)\n                </Typography>\n              </Grid>\n            </Grid>\n          </div>\n        </FileDrop>\n      </Grid>\n    );\n  }\n\n  /* --------------------\n       - URL IMAGE SEARCH -\n    *  --------------------*/\n\n  toDataUrl(src, outputFormat) {\n    const filename = src.substring(src.lastIndexOf(\"/\") + 1);\n    const img = new Image();\n    const callback = this.verifyAndUpload;\n    let dataURL;\n\n    // Only triggered if returnByteArray === true\n    let byteReader = new FileReader();\n    byteReader.onloadend = function() {\n      this.setState({ byteReader });\n      this.verifyAndUpload(\n        dataURL,\n        new Uint8Array(this.state.byteReader.result),\n        \"byteArray\",\n        this.props.outputFormat,\n        filename\n      );\n    }.bind(this);\n\n    img.crossOrigin = \"anonymous\";\n    img.onerror = function() {\n      this.displayErrorMessage(this.urlErrorMessage);\n    }.bind(this);\n\n    if (this.props.returnByteArray) {\n      img.outputFormat = this.props.outputFormat; // intentionally added prop to img tag to access it later\n      img.onload = function() {\n        const canvas = document.createElement(\"canvas\"),\n          context = canvas.getContext(\"2d\");\n\n        canvas.height = this.naturalHeight;\n        canvas.width = this.naturalWidth;\n        context.drawImage(this, 0, 0);\n        dataURL = canvas.toDataURL(this.outputFormat);\n        canvas.toBlob(blob => {\n          byteReader.readAsArrayBuffer(blob);\n        }, this.outputFormat);\n      };\n    } else {\n      img.onload = function() {\n        const canvas = document.createElement(\"canvas\"),\n          context = canvas.getContext(\"2d\");\n        let dataURL;\n        canvas.height = this.naturalHeight;\n        canvas.width = this.naturalWidth;\n        context.drawImage(this, 0, 0);\n        dataURL = canvas.toDataURL(this.outputFormat);\n        callback(dataURL, dataURL.split(\",\")[1], \"base64\", this.outputFormat, filename);\n      };\n    }\n    img.src = src;\n  }\n\n  searchTextUpdate(event) {\n    this.setState(\n      {\n        searchText: event.target.value,\n      },\n      this.props.instantUrlFetch ? this.handleSearchSubmit : null\n    );\n  }\n\n  handleSearchSubmit(image = null) {\n    this.setLoadingState();\n\n    let url;\n    if (image) {\n      // Gallery mode\n      url = image.url;\n    } else {\n      // URL mode\n      if (this.state.searchText !== null) {\n        url = this.state.searchText;\n      } else {\n        return;\n      }\n    }\n    // Directly sends data URL if allowed. Else, tries to convert image to base64\n    this.props.allowURL\n      ? this.verifyAndUpload(url, url, \"url\", null, url.substring(url.lastIndexOf(\"/\") + 1))\n      : this.toDataUrl(url, this.props.outputFormat);\n  }\n\n  renderUrlTab() {\n    return (\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{\n          height: this.tabHeight + \"px\",\n          borderWidth: 1,\n          borderColor: \"#d6d6d6\",\n          borderStyle: \"dashed\",\n          borderRadius: 4,\n          cursor: \"pointer\",\n          overflow: \"hidden\",\n        }}\n      >\n        <Grid\n          item\n          xs={12}\n          style={{\n            flexGrow: 1,\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <MuiThemeProvider theme={this.theme}>\n            <TextField\n              style={{\n                width: \"80%\",\n                primary: this.mainColor,\n                textAlign: \"left\",\n              }}\n              variant=\"outlined\"\n              type=\"text\"\n              label={<span style={{ fontWeight: \"normal\", fontSize: 12 }}>Image URL</span>}\n              onChange={this.searchTextUpdate}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      style={{\n                        marginRight: 0,\n                        padding: 0,\n                        color: this.mainColor,\n                      }}\n                      onClick={this.state.searchText !== null ? () => this.handleSearchSubmit(null) : undefined}\n                    >\n                      <SearchIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </MuiThemeProvider>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  /* -----------------\n       - IMAGE GALLERY -\n    *  -----------------*/\n\n  renderGalleryTab() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-around\",\n          overflow: \"hidden\",\n        }}\n      >\n        <GridList\n          cols={this.props.galleryCols}\n          spacing={spacingUnit}\n          style={{\n            width: \"100%\",\n            height: this.tabHeight + \"px\",\n          }}\n        >\n          {this.props.imageGallery.map((url, i) => (\n            <Grow in={this.state.value === 2} style={{ transformOrigin: \"0 0 0\" }} timeout={i * 500} key={i}>\n              <GridListTile key={i}>\n                <img\n                  src={url}\n                  alt={\"Gallery Image \" + i}\n                  onClick={() => this.handleSearchSubmit({ url })}\n                  loading=\"lazy\"\n                />\n              </GridListTile>\n            </Grow>\n          ))}\n        </GridList>\n      </div>\n    );\n  }\n\n  /* -----------------\n       - LOADING STATE -\n    *  -----------------*/\n\n  renderLoadingState() {\n    return (\n      <div style={this.tabStyle}>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          style={{\n            flexGrow: 1,\n            height: this.tabHeight + \"px\",\n          }}\n        >\n          <Grid\n            item\n            xs={12}\n            style={{\n              flexGrow: 1,\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Fade in={this.state.mainState === \"loading\"} unmountOnExit>\n              <CircularProgress\n                style={{\n                  color: this.mainColor,\n                  margin: 10,\n                }}\n              />\n            </Fade>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n\n  /* ------------------\n       - UPLOADED STATE -\n    *  ------------------*/\n\n  handleImageReset() {\n    this.setState(\n      {\n        mainState: \"initial\", // initial, search, gallery, loading, uploaded, error\n        searchText: null,\n        inputImageData: null,\n        mimeType: null,\n        encoding: null,\n        filename: null,\n        displayError: false,\n        errorMessage: null,\n        displayImageName: false,\n      },\n      () => this.sendData(this.state.inputImageData)\n    );\n  }\n\n  renderUploadedState() {\n    return (\n      <Fade in={this.state.mainState === \"uploaded\"}>\n        <div\n          style={{\n            position: \"relative\",\n            overflow: \"hidden\",\n            padding: spacingUnit,\n            height: this.tabHeight + \"px\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-around\",\n          }}\n          onMouseOver={() => this.setState({ displayImageName: true })}\n          onMouseLeave={() => this.setState({ displayImageName: false })}\n        >\n          <img\n            alt=\"Service input\"\n            src={this.state.inputImageData}\n            onError={() => this.displayErrorMessage(this.urlErrorMessage)}\n            id=\"loadedImage\"\n            // crossOrigin=\"anonymous\"\n            style={\n              this.props.displayProportionalImage\n                ? {\n                    maxHeight: this.tabHeight + \"px\",\n                    maxWidth: \"100%\",\n                  }\n                : {\n                    height: this.tabHeight + \"px\",\n                    width: \"100%\",\n                  }\n            }\n            loading=\"lazy\"\n          />\n          <Fade in={this.state.displayImageName}>\n            <GridListTileBar\n              title={\n                <Typography\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    fontFamily: snetFont,\n                    fontVariantCaps: \"normal\",\n                    textTransform: \"initial\",\n                    color: snetBackgroundGrey,\n                    fontSize: 14,\n                  }}\n                >\n                  {\" \"}\n                  {this.state.filename}{\" \"}\n                </Typography>\n              }\n            />\n          </Fade>\n        </div>\n      </Fade>\n    );\n  }\n\n  /* -----------------\n       - INITIAL STATE -\n    *  -----------------*/\n\n  handleTabChange(event, value) {\n    this.setState({\n      value,\n    });\n  }\n\n  renderTabs() {\n    return (\n      <div style={this.tabStyle}>\n        <SwipeableViews axis=\"x\" index={this.state.value}>\n          <div>{this.renderUploadTab()}</div>\n          <div>{this.renderUrlTab()}</div>\n          <div>{this.renderGalleryTab()}</div>\n          <div>{this.state.mainState === \"display\" && !this.props.disableInputTab && this.renderInputImage()}</div>\n          <div>{this.state.mainState === \"display\" && !this.props.disableOutputTab && this.renderOutputImage()}</div>\n          <div>{this.state.mainState === \"display\" && !this.props.disableComparisonTab && this.renderComparison()}</div>\n        </SwipeableViews>\n        <ClickAwayListener onClickAway={() => this.setState({ displayError: false })}>\n          <Snackbar\n            style={{\n              position: \"absolute\",\n              width: \"100%\",\n            }}\n            open={this.state.displayError}\n            autoHideDuration={5000}\n            TransitionComponent={Slide}\n            transitionDuration={300}\n            onClose={() => this.setState({ displayError: false })}\n          >\n            <SnackbarContent\n              style={{\n                backgroundColor: snetBackgroundRed,\n                margin: \"2px\",\n                border: \"2px solid\",\n                borderColor: snetRed,\n                borderRadius: \"4px\",\n                padding: \"2px\",\n                display: \"flex\",\n                justifyContent: \"space-around\",\n                flexGrow: 1,\n                width: \"100%\",\n              }}\n              aria-describedby=\"client-snackbar\"\n              message={\n                <span\n                  style={{\n                    color: snetGreyError,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    align: \"center\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  <ErrorIcon\n                    style={{\n                      fontSize: 16,\n                      opacity: 0.9,\n                      marginRight: spacingUnit,\n                    }}\n                  />\n                  <Typography\n                    style={{\n                      fontFamily: snetFont,\n                      fontVariantCaps: \"normal\",\n                      textTransform: \"initial\",\n                      color: snetGrey,\n                      fontSize: 14,\n                    }}\n                  >\n                    {this.state.errorMessage}\n                  </Typography>\n                </span>\n              }\n            />\n          </Snackbar>\n        </ClickAwayListener>\n      </div>\n    );\n  }\n\n  /* -----------------\n       - DISPLAY STATE -\n    *  -----------------*/\n\n  renderInputImage() {\n    return (\n      <Fade in={this.state.mainState === \"display\"}>\n        <div\n          style={{\n            position: \"relative\",\n            overflow: \"hidden\",\n            padding: spacingUnit,\n            height: this.tabHeight + \"px\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-around\",\n          }}\n          onMouseOver={() => this.setState({ displayImageName: true })}\n          onMouseLeave={() => this.setState({ displayImageName: false })}\n        >\n          <img\n            alt=\"Service input\"\n            src={this.state.inputImageData}\n            onError={() => this.displayErrorMessage(this.inputImageErrorMessage, \"display\")}\n            id=\"loadedImage\"\n            // crossOrigin=\"anonymous\"\n            style={\n              this.props.displayProportionalImage\n                ? {\n                    maxHeight: this.tabHeight + \"px\",\n                    maxWidth: \"100%\",\n                  }\n                : {\n                    height: this.tabHeight + \"px\",\n                    width: \"100%\",\n                  }\n            }\n            loading=\"lazy\"\n          />\n          <Fade in={this.state.displayImageName}>\n            <GridListTileBar\n              style={{}}\n              title={\n                <Typography\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignText: \"center\",\n                    fontFamily: snetFont,\n                    fontVariantCaps: \"normal\",\n                    textTransform: \"initial\",\n                    color: snetBackgroundGrey,\n                    fontSize: 14,\n                  }}\n                >\n                  {\" \"}\n                  {this.state.filename}{\" \"}\n                </Typography>\n              }\n            />\n          </Fade>\n        </div>\n      </Fade>\n    );\n  }\n\n  renderOutputImage() {\n    return (\n      <Fade in={this.state.mainState === \"display\"}>\n        <div\n          style={{\n            position: \"relative\",\n            overflow: \"hidden\",\n            padding: spacingUnit,\n            height: this.tabHeight + \"px\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-around\",\n          }}\n          onMouseOver={() => this.setState({ displayImageName: true })}\n          onMouseLeave={() => this.setState({ displayImageName: false })}\n        >\n          <img\n            alt=\"Service output\"\n            src={this.state.outputImage}\n            onError={() => this.displayErrorMessage(this.outputImageErrorMessage, \"display\")}\n            id=\"loadedImage\"\n            // crossOrigin=\"anonymous\"\n            style={\n              this.props.displayProportionalImage\n                ? {\n                    maxHeight: this.tabHeight + \"px\",\n                    maxWidth: \"100%\",\n                  }\n                : {\n                    height: this.tabHeight + \"px\",\n                    width: \"100%\",\n                  }\n            }\n            loading=\"lazy\"\n          />\n          {this.state.outputImageName !== null ? (\n            <Fade in={this.state.displayImageName}>\n              <GridListTileBar\n                style={{}}\n                title={\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignText: \"center\",\n                      fontFamily: snetFont,\n                      fontVariantCaps: \"normal\",\n                      textTransform: \"initial\",\n                      color: snetBackgroundGrey,\n                      fontSize: 14,\n                    }}\n                  >\n                    {\" \"}\n                    {this.state.outputImageName}{\" \"}\n                  </Typography>\n                }\n              />\n            </Fade>\n          ) : (\n            <React.Fragment />\n          )}\n        </div>\n      </Fade>\n    );\n  }\n\n  handleMouseMove(event) {\n    let offsetLeft = this.imageDiv.current.getBoundingClientRect().left;\n    let offsetImageLeft = this.outputImage.current.getBoundingClientRect().left;\n    this.setState({\n      imageXPosition: event.clientX - offsetImageLeft,\n      dividerXPosition: event.clientX - offsetLeft,\n    });\n  }\n\n  setInputImageDimensions() {\n    this.setState({\n      inputImageHeight: this.inputImage.current.clientHeight,\n      inputImageWidth: this.inputImage.current.clientWidth,\n    });\n  }\n\n  setInitialImageXPosition() {\n    this.setState({\n      imageXPosition: this.outputImage.current.clientWidth / 2,\n    });\n  }\n\n  renderComparison() {\n    return (\n      <Fade in={this.state.mainState === \"display\"}>\n        <div\n          ref={this.imageDiv}\n          id=\"imageDiv\"\n          style={{\n            position: \"relative\",\n            overflow: \"hidden\",\n            padding: spacingUnit,\n            width: \"100%\",\n            height: this.tabHeight + \"px\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            cursor: \"ew-resize\",\n          }}\n          onMouseMove={this.handleMouseMove}\n        >\n          <img\n            ref={this.inputImage}\n            style={\n              this.props.displayProportionalImage\n                ? {\n                    maxHeight: this.tabHeight + \"px\",\n                    maxWidth: \"100%\",\n                    align: \"center\",\n                    position: \"relative\",\n                  }\n                : {\n                    height: this.tabHeight + \"px\",\n                    width: \"100%\",\n                    align: \"center\",\n                    position: \"relative\",\n                  }\n            }\n            alt=\"Service response...\"\n            src={this.state.inputImageData}\n            onLoad={this.setInputImageDimensions}\n            loading=\"lazy\"\n          />\n          <img\n            ref={this.outputImage}\n            style={\n              this.props.displayProportionalImage\n                ? {\n                    maxHeight: this.tabHeight + \"px\",\n                    maxWidth: \"100%\",\n                    align: \"center\",\n                    position: \"absolute\",\n                    clip: \"rect(0px,\" + this.state.imageXPosition + \"px,10000px,0px)\",\n                  }\n                : {\n                    height: this.tabHeight + \"px\",\n                    width: \"100%\",\n                    align: \"center\",\n                    position: \"absolute\",\n                    clip: \"rect(0px,\" + this.state.imageXPosition + \"px,10000px,0px)\",\n                  }\n            }\n            onLoad={this.setInitialImageXPosition}\n            height={this.props.overlayInputImage && this.state.inputImageHeight}\n            width={this.props.overlayInputImage && this.state.inputImageWidth}\n            alt=\"Service response...\"\n            src={this.state.outputImage}\n            loading=\"lazy\"\n          />\n          <div\n            style={{\n              position: \"absolute\",\n              left: this.state.dividerXPosition - 1.5 + \"px\",\n              borderLeft: \"3px solid white\",\n              height: this.tabHeight,\n            }}\n          />\n          <div\n            style={{\n              position: \"absolute\",\n              left: this.state.dividerXPosition - 15 + \"px\",\n              top: this.tabHeight / 2 - 15 + \"px\",\n              width: \"30px\",\n              height: \"30px\",\n              borderRadius: \"15px\",\n              backgroundColor: \"white\",\n            }}\n          />\n          <UnfoldMoreIcon\n            style={{\n              color: this.mainColor,\n              width: \"30px\",\n              height: \"30px\",\n              position: \"absolute\",\n              left: this.state.dividerXPosition - 15 + \"px\",\n              top: this.tabHeight / 2 - 15 + \"px\",\n              transform: \"rotate(90deg)\",\n            }}\n          />\n        </div>\n      </Fade>\n    );\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          width: this.props.width,\n          minHeight: \"264px\",\n          minWidth: minimumWidth,\n          position: \"relative\",\n        }}\n      >\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"center\"\n          style={{ color: \"black\", backgroundColor: \"white\" }}\n          spacing={0}\n        >\n          <Grid item xs={12}>\n            <Grid container direction=\"row\" alignItems=\"flex-end\" justify=\"space-around\" style={{ paddingBottom: 5 }}>\n              <Grid item xs={4}>\n                <Typography\n                  color=\"inherit\"\n                  noWrap\n                  variant=\"h6\"\n                  style={{ fontSize: 18, fontFamily: snetFont, padding: spacingUnit / 2 }}\n                >\n                  {this.state.mainState === \"display\" ? this.props.displayModeTitle : this.props.imageName}\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <MuiThemeProvider theme={this.theme}>\n                  <Tabs\n                    value={this.state.value}\n                    onChange={this.handleTabChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                    style={{\n                      color: snetGrey,\n                    }}\n                    TabIndicatorProps={{\n                      style: {\n                        bottom: 8,\n                        backgroundColor: \"#4086ff\",\n                      },\n                    }}\n                  >\n                    {this.state.mainState !== \"uploaded\" &&\n                      !(this.state.mainState === \"display\") &&\n                      !this.props.disableUploadTab && (\n                        <Tab\n                          style={{\n                            marginRight: \"0\",\n                            minWidth: \"fit-content\",\n                            paddingBottom: 0,\n                            flexGrow: 0,\n                            flexBasis: 0,\n                            paddingLeft: 10,\n                          }}\n                          value={0}\n                          label={<span style={this.tabLabelStyle}>Upload</span>}\n                        />\n                      )}\n                    {this.state.mainState !== \"uploaded\" &&\n                      !(this.state.mainState === \"display\") &&\n                      !this.props.disableUrlTab && (\n                        <Tab\n                          style={{\n                            marginRight: \"0\",\n                            minWidth: \"fit-content\",\n                            paddingBottom: 0,\n                            flexGrow: 0,\n                            flexBasis: 0,\n                            paddingLeft: 10,\n                          }}\n                          value={1}\n                          label={<span style={this.tabLabelStyle}>URL</span>}\n                        />\n                      )}\n                    {this.state.mainState !== \"uploaded\" &&\n                      !(this.state.mainState === \"display\") &&\n                      this.props.imageGallery.length > 0 && (\n                        <Tab\n                          style={{\n                            marginRight: \"0\",\n                            minWidth: \"fit-content\",\n                            paddingBottom: 0,\n                            flexGrow: 0,\n                            flexBasis: 0,\n                            paddingLeft: 10,\n                          }}\n                          value={2}\n                          label={<span style={this.tabLabelStyle}>Gallery</span>}\n                        />\n                      )}\n                    {this.state.mainState === \"display\" && !this.props.disableInputTab && (\n                      <Tab\n                        style={{\n                          marginRight: \"0\",\n                          minWidth: \"fit-content\",\n                          paddingBottom: 0,\n                          flexGrow: 0,\n                          flexBasis: 0,\n                        }}\n                        value={3}\n                        label={<span style={this.tabLabelStyle}>{this.props.inputTabTitle}</span>}\n                      />\n                    )}\n                    {this.state.mainState === \"display\" && !this.props.disableOutputTab && (\n                      <Tab\n                        style={{ minWidth: \"5%\" }}\n                        value={4}\n                        label={<span style={this.tabLabelStyle}>{this.props.outputTabTitle}</span>}\n                      />\n                    )}\n                    {this.state.mainState === \"display\" && !this.props.disableComparisonTab && (\n                      <Tab\n                        style={{ minWidth: \"5%\" }}\n                        value={5}\n                        label={<span style={this.tabLabelStyle}>{this.props.comparisonTabTitle}</span>}\n                      />\n                    )}\n                  </Tabs>\n                </MuiThemeProvider>\n              </Grid>\n              <Grid\n                item\n                xs={1}\n                style={{\n                  flexGrow: 1,\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                {this.props.infoTip.length > 0 && (\n                  <Tooltip\n                    title={\n                      <Typography style={{ fontFamily: snetFont, fontSize: 12, color: \"white\" }}>\n                        {this.props.infoTip}\n                      </Typography>\n                    }\n                  >\n                    <InfoIcon\n                      style={{\n                        fontSize: 20,\n                        color: snetGrey,\n                      }}\n                    />\n                  </Tooltip>\n                )}\n              </Grid>\n              <Grid\n                item\n                xs={1}\n                style={{ flexGrow: 1, display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}\n              >\n                {this.state.mainState === \"uploaded\" && !this.props.disableResetButton && (\n                  <Fade in={this.state.mainState === \"uploaded\"}>\n                    <Tooltip\n                      title={\n                        <Typography style={{ fontFamily: snetFont, fontSize: 12, color: \"white\" }}>\n                          Click to reset!\n                        </Typography>\n                      }\n                    >\n                      <IconButton onClick={this.handleImageReset.bind(this)}>\n                        <RefreshIcon\n                          style={{\n                            fontSize: 20,\n                            color: this.mainColor,\n                          }}\n                        />\n                      </IconButton>\n                    </Tooltip>\n                  </Fade>\n                )}\n                {this.state.mainState === \"display\" && !this.props.disableDownloadButton && (\n                  <Fade in={this.state.mainState === \"display\"}>\n                    <Tooltip\n                      title={\n                        <Typography style={{ fontFamily: snetFont, fontSize: 12, color: \"white\" }}>\n                          Download output image\n                        </Typography>\n                      }\n                    >\n                      <a href={this.state.outputImage} download={this.state.outputImageName}>\n                        <IconButton>\n                          <CloudDownloadIcon\n                            style={{\n                              fontSize: 20,\n                              color: this.mainColor,\n                            }}\n                          />\n                        </IconButton>\n                      </a>\n                    </Tooltip>\n                  </Fade>\n                )}\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} style={{ backgroundColor: snetBackgroundGrey }}>\n            {((this.state.mainState === \"initial\" || this.state.mainState === \"display\") && this.renderTabs()) ||\n              (this.state.mainState === \"loading\" && this.renderLoadingState()) ||\n              (this.state.mainState === \"uploaded\" && this.renderUploadedState())}\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nSNETImageUpload.propTypes = {\n  width: PropTypes.string, // e.g.: \"500px\", \"50%\" (of parent component width)\n  tabHeight: PropTypes.number, // a number without units\n  imageDataFunc: PropTypes.func.isRequired,\n  imageName: PropTypes.string,\n  disableUploadTab: PropTypes.bool, // If true disables upload tab\n  disableUrlTab: PropTypes.bool, // If true disables url tab\n  disableResetButton: PropTypes.bool, // If true disables image reset button\n  returnByteArray: PropTypes.bool, // whether to return base64 or byteArray image data\n  outputFormat: PropTypes.oneOf([\"image/png\", \"image/jpg\", \"image/jpeg\"]),\n  allowedInputTypes: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  maxImageSize: PropTypes.number, // 10 mb\n  maxImageWidth: PropTypes.number,\n  maxImageHeight: PropTypes.number,\n  displayProportionalImage: PropTypes.bool,\n  allowURL: PropTypes.bool,\n  instantUrlFetch: PropTypes.bool,\n  imageGallery: PropTypes.arrayOf(PropTypes.string),\n  galleryCols: PropTypes.number,\n  infoTip: PropTypes.string,\n  mainColor: PropTypes.object,\n\n  // Output mode props\n  displayModeTitle: PropTypes.string,\n  outputImage: PropTypes.string,\n  outputImageMimeType: PropTypes.oneOf([\n    \"application/octet-stream\",\n    \"image/png\",\n    \"image/jpg\",\n    \"image/jpeg\",\n    \"image/gif\",\n  ]),\n  outputImageName: PropTypes.string,\n  disableInputTab: PropTypes.bool,\n  disableOutputTab: PropTypes.bool,\n  disableComparisonTab: PropTypes.bool,\n  disableDownloadButton: PropTypes.bool,\n  overlayInputImage: PropTypes.bool,\n  inputTabTitle: PropTypes.string,\n  outputTabTitle: PropTypes.string,\n  comparisonTabTitle: PropTypes.string,\n};\n\nSNETImageUpload.defaultProps = {\n  width: \"500px\",\n  tabHeight: 300,\n  imageName: \"Content Image\",\n  disableUploadTab: false, // If true disables upload tab\n  disableUrlTab: false, // If true disables url tab\n  disableResetButton: false,\n  returnByteArray: false,\n  outputFormat: \"image/png\",\n  allowedInputTypes: [\"image/png\", \"image/jpeg\", \"image/jpg\"],\n  maxImageSize: 10000000, // 10 mb\n  maxImageWidth: null,\n  maxImageHeight: null,\n  displayProportionalImage: true, // if true, keeps uploaded image proportions. Else stretches it\n  allowURL: false, // sends image URL instead of image data for both URL and Gallery modes. Might still send base64 if the user uploads an image\n  instantUrlFetch: false,\n  imageGallery: [],\n  galleryCols: 3,\n  infoTip: \"\",\n  mainColor: blue,\n\n  // Output mode props\n  displayModeTitle: \"Result\",\n  outputImage: \"\",\n  outputImageMimeType: undefined,\n  outputImageName: \"service-output\",\n  disableInputTab: false,\n  disableOutputTab: false,\n  disableComparisonTab: false,\n  disableDownloadButton: false,\n  overlayInputImage: true,\n  inputTabTitle: \"Input\",\n  outputTabTitle: \"Output\",\n  comparisonTabTitle: \"Comparison\",\n};","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { Grid, MuiThemeProvider } from \"@material-ui/core\";\nimport { blue } from \"@material-ui/core/colors\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport grey from \"@material-ui/core/es/colors/grey\";\nimport red from \"@material-ui/core/es/colors/red\";\n\nimport {\n\tAlgoSignerConnect,\n\tAlgoSignerAccounts,\n\tAlgoSignerSign,\n  AlgoSignerSendTx,\n  AlgoSignerCheckTx\n} from '../../AlgoSigner';\n\nimport { GetStyleTransferResponse } from '../../helpers/interface';\n\nimport HoverIcon from \"./HoverIcon\";\nimport SNETImageUpload from \"./SNETImageUpload\";\n\nconst STYLE_TRANSFER_ACCOUNT = 'JTEAQYLZW22LQUB2AOQXGG2SQM3K7FWABHFKKF24GLP5EGEZ5YVYJSFKDY'\nconst STYLE_TRANSFER_PRICE = 10000\nconst STYLE_TRANSFER_NOTE = 'AlgorandStyleTransfer'\n\nconst initialUserInput = {\n  // Actual inputs\n  content: \"\",\n  style: \"\",\n  contentSize: 640,\n  styleSize: 640,\n  preserveColor: false,\n  alpha: 1.0, // 0 to 1\n  crop: false,\n  saveExt: \"\",\n};\n\n\nexport default class Uploader extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...initialUserInput,\n      useAlgoSigner: false,\n      accounts: [],\n      processingTx: false,\n      isComplete: false,\n      response: undefined,\n    };\n\n    this.mainFont = \"Muli\";\n    this.mainFontSize = 14;\n\n    this.users_guide = \"https://github.com/03303/algo-style-transfer-dapp\";\n    this.code_repo = \"https://github.com/03303/algo-style-transfer-dapp\";\n    this.reference = \"https://www.tensorflow.org/tutorials/generative/style_transfer\";\n\n    this.styleGallery = [\n      \"https://raw.githubusercontent.com/dxyang/StyleTransfer/master/style_imgs/mosaic.jpg\",\n      \"https://raw.githubusercontent.com/ShafeenTejani/fast-style-transfer/master/examples/dora-maar-picasso.jpg\",\n      \"https://raw.githubusercontent.com/singnet/style-transfer-service/master/docs/assets/input/style/brushstrokes.jpg\",\n      \"https://raw.githubusercontent.com/singnet/style-transfer-service/master/docs/assets/examples/impronte_d_artista_cropped.jpg\",\n      \"https://raw.githubusercontent.com/singnet/style-transfer-service/master/docs/assets/examples/woman_with_hat_matisse_cropped.jpg\",\n      \"https://raw.githubusercontent.com/singnet/style-transfer-service/master/docs/assets/examples/sketch_cropped.png\",\n      \"https://raw.githubusercontent.com/singnet/style-transfer-service/master/docs/assets/examples/ashville_cropped.jpg\",\n      \"https://raw.githubusercontent.com/singnet/style-transfer-service/master/docs/assets/examples/goeritz_cropped.jpg\",\n      \"https://raw.githubusercontent.com/singnet/style-transfer-service/master/docs/assets/examples/en_campo_gris_cropped.jpg\",\n    ];\n\n    this.runService = this.runService.bind(this);\n    this.canBeInvoked = this.canBeInvoked.bind(this);\n    this.reset = this.reset.bind(this);\n\n    this.getContentImageData = this.getContentImageData.bind(this);\n    this.getStyleImageData = this.getStyleImageData.bind(this);\n\n    // Color Palette\n    this.theme = createMuiTheme({\n      palette: {\n        primary: blue,\n        secondary: grey,\n      },\n      typography: {\n        useNextVariants: true,\n      },\n      overrides: {\n        MuiIconButton: {\n          // Name of the component ⚛️ / style sheet\n          colorPrimary: blue[500],\n          colorSecondary: grey[500],\n        },\n        MuiSvgIcon: {\n          colorPrimary: red[500],\n          colorSecondary: grey[500],\n        },\n      },\n    });\n  }\n\n  parseResponse() {\n    const { response } = this.state;\n    if (typeof response !== \"undefined\") {\n      if (typeof response === \"string\") {\n        return response;\n      }\n      return response.data;\n    }\n    return null;\n  }\n\n  getContentImageData(data) {\n    this.setState({ content: data });\n  }\n\n  getStyleImageData(data) {\n    this.setState({ style: data });\n  }\n\n  reset() {\n    this.setState({ isComplete: false, processingTx: false, content: \"\", style: \"\", response: undefined });\n  }\n\n  canBeInvoked() {\n    return this.state.content && this.state.style && !this.state.processingTx;\n  }\n\n\t// Set AlgoSigner, asking for users access\n\tsetup = async () => {\n\t\tconst ok = await AlgoSignerConnect();\n\t\tif (ok) {\n\t\t\tconst accounts = await AlgoSignerAccounts();\n\t\t\tthis.setState({ useAlgoSigner: true, accounts: accounts });\n\t\t}\n\t}\n\n\trunService = async () => {\n    try {\n      const { useAlgoSigner, accounts, content, style } = this.state;\n      if (useAlgoSigner && accounts.length) {\n        const params = {\n          from: accounts[0]['address'],\n          to: STYLE_TRANSFER_ACCOUNT,\n          amount: STYLE_TRANSFER_PRICE,\n          note: STYLE_TRANSFER_NOTE\n        };\n        this.setState({ processingTx: true });\n        const signedTx = await AlgoSignerSign(params);\n        const sentTx = await AlgoSignerSendTx(signedTx);\n        const txStatus = await AlgoSignerCheckTx(sentTx);\n        if (txStatus) {\n          const response = await GetStyleTransferResponse(content, style);\n          if (response && response.data) {\n            this.setState({ isComplete: true, response: response.data.output });\n          }\n        }\n      } else {\n        alert('AlgoSigner not installed!\\nhttps://www.purestake.com/technology/algosigner/')\n      }\n    } catch(e) {\n      console.error(e)\n    }\n    this.setState({ processingTx: false });\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this.setup();\n\t}\n    \n  render() {\n    const { isComplete, processingTx } =  this.state;\n    return (\n      <div style={{ flexGrow: 1 }}>\n        <Grid item container justify=\"center\" style={{ padding: 8 }}>\n          <Paper\n            style={{\n              padding: 8 * 2,\n              margin: \"auto\",\n              width: \"100%\",\n              maxWidth: 550,\n            }}\n          >\n            <MuiThemeProvider theme={this.theme}>\n              <Grid container spacing={0} justify=\"center\" alignItems=\"center\">\n                <Grid item xs={12} container alignItems=\"center\" justify=\"space-between\">\n                  <Grid item>\n                    <Typography\n                      style={{\n                        fontFamily: this.mainFont,\n                        fontSize: (this.mainFontSize * 4) / 3,\n                      }}\n                    >\n                      Algorand Style Transfer\n                    </Typography>\n                  </Grid>\n                  <Grid item xs container justify=\"flex-end\">\n                    <Grid item>\n                      <HoverIcon text=\"View code on Github\" href={this.code_repo}>\n                        <SvgIcon>\n                          <path // Github Icon\n                            d=\"M12.007 0C6.12 0 1.1 4.27.157 10.08c-.944 5.813 2.468 11.45 8.054 13.312.19.064.397.033.555-.084.16-.117.25-.304.244-.5v-2.042c-3.33.735-4.037-1.56-4.037-1.56-.22-.726-.694-1.35-1.334-1.756-1.096-.75.074-.735.074-.735.773.103 1.454.557 1.846 1.23.694 1.21 2.23 1.638 3.45.96.056-.61.327-1.178.766-1.605-2.67-.3-5.462-1.335-5.462-6.002-.02-1.193.42-2.35 1.23-3.226-.327-1.015-.27-2.116.166-3.09 0 0 1.006-.33 3.3 1.23 1.966-.538 4.04-.538 6.003 0 2.295-1.5 3.3-1.23 3.3-1.23.445 1.006.49 2.144.12 3.18.81.877 1.25 2.033 1.23 3.226 0 4.607-2.805 5.627-5.476 5.927.578.583.88 1.386.825 2.206v3.29c-.005.2.092.393.26.507.164.115.377.14.565.063 5.568-1.88 8.956-7.514 8.007-13.313C22.892 4.267 17.884.007 12.008 0z\"\n                          />\n                        </SvgIcon>\n                      </HoverIcon>\n                    </Grid>\n                    <Grid item>\n                      <HoverIcon text=\"User's guide\" href={this.users_guide}>\n                        <InfoIcon />\n                      </HoverIcon>\n                    </Grid>\n                    <Grid item>\n                      <HoverIcon text=\"View original project\" href={this.reference}>\n                        <SvgIcon>\n                          <path d=\"M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm0 11.701c0 2.857-1.869 4.779-4.5 5.299l-.498-1.063c1.219-.459 2.001-1.822 2.001-2.929h-2.003v-5.008h5v3.701zm6 0c0 2.857-1.869 4.779-4.5 5.299l-.498-1.063c1.219-.459 2.001-1.822 2.001-2.929h-2.003v-5.008h5v3.701z\" />\n                        </SvgIcon>\n                      </HoverIcon>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item xs={12} container justify=\"center\">\n                  <SNETImageUpload\n                    style={{ align: \"center\" }}\n                    maxImageSize={3000000}\n                    maxImageWidth={2400}\n                    maxImageHeight={1800}\n                    imageDataFunc={this.getContentImageData}\n                    imageName=\"Input\"\n                    outputImage={this.parseResponse()}\n                    outputImageName=\"stylizedImage\"\n                    width=\"90%\"\n                    instantUrlFetch={true}\n                    allowURL={true}\n                  />\n                </Grid>\n                {!isComplete && \n                  <Grid item xs={12} container justify=\"center\">\n                    <SNETImageUpload\n                      imageDataFunc={this.getStyleImageData}\n                      imageName=\"Style\"\n                      maxImageSize={3000000}\n                      maxImageWidth={2400}\n                      maxImageHeight={1800}\n                      disableResetButton={isComplete}\n                      width=\"90%\"\n                      instantUrlFetch={true}\n                      allowURL={true}\n                      imageGallery={this.styleGallery}\n                    />\n                  </Grid>\n                }\n              </Grid>\n              {!isComplete && \n                <Grid item container justify=\"center\" style={{ paddingTop: 16 }}>\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      size=\"medium\"\n                      color=\"primary\"\n                      style={{ fontSize: \"13px\", marginLeft: \"10px\" }}\n                      onClick={this.runService}\n                      disabled={!this.canBeInvoked()}\n                    >\n                    {processingTx ? \"Please Wait\" : \"Run\"}\n                    </Button>\n                  </Grid>\n                </Grid>\n              }\n              {isComplete && \n                <Grid item container justify=\"center\" style={{ paddingTop: 16 }}>\n                    <Grid item>\n                        <Button\n                          variant=\"contained\"\n                          size=\"medium\"\n                          color=\"primary\"\n                          style={{ fontSize: \"13px\", marginLeft: \"10px\" }}\n                          onClick={this.reset}\n                        >\n                        Reset\n                        </Button>\n                    </Grid>\n                </Grid>\n              }\n            </MuiThemeProvider>\n          </Paper>\n        </Grid>\n      </div>\n    );\n  }\n}\n","import './App.css';\n\nimport Uploader from './components/Uploader'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Uploader />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}